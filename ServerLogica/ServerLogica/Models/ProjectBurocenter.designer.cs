#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServerLogica.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DBburocenter")]
	public partial class ProjectBurocenterDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertArtikel(Artikel instance);
    partial void UpdateArtikel(Artikel instance);
    partial void DeleteArtikel(Artikel instance);
    partial void InsertBedrijf(Bedrijf instance);
    partial void UpdateBedrijf(Bedrijf instance);
    partial void DeleteBedrijf(Bedrijf instance);
    partial void InsertBedrijf_Contact(Bedrijf_Contact instance);
    partial void UpdateBedrijf_Contact(Bedrijf_Contact instance);
    partial void DeleteBedrijf_Contact(Bedrijf_Contact instance);
    partial void InsertContactpersoon(Contactpersoon instance);
    partial void UpdateContactpersoon(Contactpersoon instance);
    partial void DeleteContactpersoon(Contactpersoon instance);
    partial void InsertHoofdligplaat(Hoofdligplaat instance);
    partial void UpdateHoofdligplaat(Hoofdligplaat instance);
    partial void DeleteHoofdligplaat(Hoofdligplaat instance);
    partial void InsertLigplaat(Ligplaat instance);
    partial void UpdateLigplaat(Ligplaat instance);
    partial void DeleteLigplaat(Ligplaat instance);
    partial void InsertOpdracht(Opdracht instance);
    partial void UpdateOpdracht(Opdracht instance);
    partial void DeleteOpdracht(Opdracht instance);
    partial void InsertOpdracht_Werknemer(Opdracht_Werknemer instance);
    partial void UpdateOpdracht_Werknemer(Opdracht_Werknemer instance);
    partial void DeleteOpdracht_Werknemer(Opdracht_Werknemer instance);
    partial void InsertPrestatie(Prestatie instance);
    partial void UpdatePrestatie(Prestatie instance);
    partial void DeletePrestatie(Prestatie instance);
    partial void InsertPrestatiesoort(Prestatiesoort instance);
    partial void UpdatePrestatiesoort(Prestatiesoort instance);
    partial void DeletePrestatiesoort(Prestatiesoort instance);
    partial void InsertStad(Stad instance);
    partial void UpdateStad(Stad instance);
    partial void DeleteStad(Stad instance);
    partial void InsertVerbruik_Ligplaat(Verbruik_Ligplaat instance);
    partial void UpdateVerbruik_Ligplaat(Verbruik_Ligplaat instance);
    partial void DeleteVerbruik_Ligplaat(Verbruik_Ligplaat instance);
    partial void InsertVerbruikartikel(Verbruikartikel instance);
    partial void UpdateVerbruikartikel(Verbruikartikel instance);
    partial void DeleteVerbruikartikel(Verbruikartikel instance);
    partial void InsertWerknemer(Werknemer instance);
    partial void UpdateWerknemer(Werknemer instance);
    partial void DeleteWerknemer(Werknemer instance);
    partial void Insertlog(log instance);
    partial void Updatelog(log instance);
    partial void Deletelog(log instance);
    #endregion
		
		public ProjectBurocenterDataContext() : 
				base(global::ServerLogica.Properties.Settings.Default.DBburocenterConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectBurocenterDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectBurocenterDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectBurocenterDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProjectBurocenterDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Artikel> Artikels
		{
			get
			{
				return this.GetTable<Artikel>();
			}
		}
		
		public System.Data.Linq.Table<Bedrijf> Bedrijfs
		{
			get
			{
				return this.GetTable<Bedrijf>();
			}
		}
		
		public System.Data.Linq.Table<Bedrijf_Contact> Bedrijf_Contacts
		{
			get
			{
				return this.GetTable<Bedrijf_Contact>();
			}
		}
		
		public System.Data.Linq.Table<Contactpersoon> Contactpersoons
		{
			get
			{
				return this.GetTable<Contactpersoon>();
			}
		}
		
		public System.Data.Linq.Table<Hoofdligplaat> Hoofdligplaats
		{
			get
			{
				return this.GetTable<Hoofdligplaat>();
			}
		}
		
		public System.Data.Linq.Table<Ligplaat> Ligplaats
		{
			get
			{
				return this.GetTable<Ligplaat>();
			}
		}
		
		public System.Data.Linq.Table<Opdracht> Opdrachts
		{
			get
			{
				return this.GetTable<Opdracht>();
			}
		}
		
		public System.Data.Linq.Table<Opdracht_Werknemer> Opdracht_Werknemers
		{
			get
			{
				return this.GetTable<Opdracht_Werknemer>();
			}
		}
		
		public System.Data.Linq.Table<Prestatie> Prestaties
		{
			get
			{
				return this.GetTable<Prestatie>();
			}
		}
		
		public System.Data.Linq.Table<Prestatiesoort> Prestatiesoorts
		{
			get
			{
				return this.GetTable<Prestatiesoort>();
			}
		}
		
		public System.Data.Linq.Table<Stad> Stads
		{
			get
			{
				return this.GetTable<Stad>();
			}
		}
		
		public System.Data.Linq.Table<Verbruik_Ligplaat> Verbruik_Ligplaats
		{
			get
			{
				return this.GetTable<Verbruik_Ligplaat>();
			}
		}
		
		public System.Data.Linq.Table<Verbruikartikel> Verbruikartikels
		{
			get
			{
				return this.GetTable<Verbruikartikel>();
			}
		}
		
		public System.Data.Linq.Table<Werknemer> Werknemers
		{
			get
			{
				return this.GetTable<Werknemer>();
			}
		}
		
		public System.Data.Linq.Table<log> logs
		{
			get
			{
				return this.GetTable<log>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Artikel")]
	public partial class Artikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _id;
		
		private string _omschrijving;
		
		private string _barcode;
		
		private EntityRef<Verbruikartikel> _Verbruikartikel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidChanging(int value);
    partial void OnidChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    partial void OnbarcodeChanging(string value);
    partial void OnbarcodeChanged();
    #endregion
		
		public Artikel()
		{
			this._Verbruikartikel = default(EntityRef<Verbruikartikel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int id
		{
			get
			{
				return this._id;
			}
			set
			{
				if ((this._id != value))
				{
					this.OnidChanging(value);
					this.SendPropertyChanging();
					this._id = value;
					this.SendPropertyChanged("id");
					this.OnidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_barcode", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string barcode
		{
			get
			{
				return this._barcode;
			}
			set
			{
				if ((this._barcode != value))
				{
					this.OnbarcodeChanging(value);
					this.SendPropertyChanging();
					this._barcode = value;
					this.SendPropertyChanged("barcode");
					this.OnbarcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Verbruikartikel", Storage="_Verbruikartikel", ThisKey="id", OtherKey="artikelid", IsUnique=true, IsForeignKey=false)]
		public Verbruikartikel Verbruikartikel
		{
			get
			{
				return this._Verbruikartikel.Entity;
			}
			set
			{
				Verbruikartikel previousValue = this._Verbruikartikel.Entity;
				if (((previousValue != value) 
							|| (this._Verbruikartikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Verbruikartikel.Entity = null;
						previousValue.Artikel = null;
					}
					this._Verbruikartikel.Entity = value;
					if ((value != null))
					{
						value.Artikel = this;
					}
					this.SendPropertyChanged("Verbruikartikel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bedrijf")]
	public partial class Bedrijf : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bedrijfsid;
		
		private string _btwnr;
		
		private string _bedrijfsnaam;
		
		private string _naamcode;
		
		private string _straatnaam;
		
		private string _nummer;
		
		private int _stadid;
		
		private EntitySet<Bedrijf_Contact> _Bedrijf_Contacts;
		
		private EntitySet<Opdracht> _Opdrachts;
		
		private EntityRef<Stad> _Stad;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbedrijfsidChanging(int value);
    partial void OnbedrijfsidChanged();
    partial void OnbtwnrChanging(string value);
    partial void OnbtwnrChanged();
    partial void OnbedrijfsnaamChanging(string value);
    partial void OnbedrijfsnaamChanged();
    partial void OnnaamcodeChanging(string value);
    partial void OnnaamcodeChanged();
    partial void OnstraatnaamChanging(string value);
    partial void OnstraatnaamChanged();
    partial void OnnummerChanging(string value);
    partial void OnnummerChanged();
    partial void OnstadidChanging(int value);
    partial void OnstadidChanged();
    #endregion
		
		public Bedrijf()
		{
			this._Bedrijf_Contacts = new EntitySet<Bedrijf_Contact>(new Action<Bedrijf_Contact>(this.attach_Bedrijf_Contacts), new Action<Bedrijf_Contact>(this.detach_Bedrijf_Contacts));
			this._Opdrachts = new EntitySet<Opdracht>(new Action<Opdracht>(this.attach_Opdrachts), new Action<Opdracht>(this.detach_Opdrachts));
			this._Stad = default(EntityRef<Stad>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bedrijfsid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bedrijfsid
		{
			get
			{
				return this._bedrijfsid;
			}
			set
			{
				if ((this._bedrijfsid != value))
				{
					if (this._Stad.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbedrijfsidChanging(value);
					this.SendPropertyChanging();
					this._bedrijfsid = value;
					this.SendPropertyChanged("bedrijfsid");
					this.OnbedrijfsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_btwnr", DbType="VarChar(14) NOT NULL", CanBeNull=false)]
		public string btwnr
		{
			get
			{
				return this._btwnr;
			}
			set
			{
				if ((this._btwnr != value))
				{
					this.OnbtwnrChanging(value);
					this.SendPropertyChanging();
					this._btwnr = value;
					this.SendPropertyChanged("btwnr");
					this.OnbtwnrChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bedrijfsnaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string bedrijfsnaam
		{
			get
			{
				return this._bedrijfsnaam;
			}
			set
			{
				if ((this._bedrijfsnaam != value))
				{
					this.OnbedrijfsnaamChanging(value);
					this.SendPropertyChanging();
					this._bedrijfsnaam = value;
					this.SendPropertyChanged("bedrijfsnaam");
					this.OnbedrijfsnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naamcode", DbType="VarChar(50)")]
		public string naamcode
		{
			get
			{
				return this._naamcode;
			}
			set
			{
				if ((this._naamcode != value))
				{
					this.OnnaamcodeChanging(value);
					this.SendPropertyChanging();
					this._naamcode = value;
					this.SendPropertyChanged("naamcode");
					this.OnnaamcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_straatnaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string straatnaam
		{
			get
			{
				return this._straatnaam;
			}
			set
			{
				if ((this._straatnaam != value))
				{
					this.OnstraatnaamChanging(value);
					this.SendPropertyChanging();
					this._straatnaam = value;
					this.SendPropertyChanged("straatnaam");
					this.OnstraatnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nummer", DbType="VarChar(4) NOT NULL", CanBeNull=false)]
		public string nummer
		{
			get
			{
				return this._nummer;
			}
			set
			{
				if ((this._nummer != value))
				{
					this.OnnummerChanging(value);
					this.SendPropertyChanging();
					this._nummer = value;
					this.SendPropertyChanged("nummer");
					this.OnnummerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stadid", DbType="Int NOT NULL")]
		public int stadid
		{
			get
			{
				return this._stadid;
			}
			set
			{
				if ((this._stadid != value))
				{
					this.OnstadidChanging(value);
					this.SendPropertyChanging();
					this._stadid = value;
					this.SendPropertyChanged("stadid");
					this.OnstadidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Bedrijf_Contact", Storage="_Bedrijf_Contacts", ThisKey="bedrijfsid", OtherKey="bedrijfsid")]
		public EntitySet<Bedrijf_Contact> Bedrijf_Contacts
		{
			get
			{
				return this._Bedrijf_Contacts;
			}
			set
			{
				this._Bedrijf_Contacts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Opdracht", Storage="_Opdrachts", ThisKey="bedrijfsid", OtherKey="klantid")]
		public EntitySet<Opdracht> Opdrachts
		{
			get
			{
				return this._Opdrachts;
			}
			set
			{
				this._Opdrachts.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stad_Bedrijf", Storage="_Stad", ThisKey="bedrijfsid", OtherKey="stadid", IsForeignKey=true)]
		public Stad Stad
		{
			get
			{
				return this._Stad.Entity;
			}
			set
			{
				Stad previousValue = this._Stad.Entity;
				if (((previousValue != value) 
							|| (this._Stad.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Stad.Entity = null;
						previousValue.Bedrijf = null;
					}
					this._Stad.Entity = value;
					if ((value != null))
					{
						value.Bedrijf = this;
						this._bedrijfsid = value.stadid;
					}
					else
					{
						this._bedrijfsid = default(int);
					}
					this.SendPropertyChanged("Stad");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bedrijf_Contacts(Bedrijf_Contact entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = this;
		}
		
		private void detach_Bedrijf_Contacts(Bedrijf_Contact entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = null;
		}
		
		private void attach_Opdrachts(Opdracht entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = this;
		}
		
		private void detach_Opdrachts(Opdracht entity)
		{
			this.SendPropertyChanging();
			entity.Bedrijf = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bedrijf_Contact")]
	public partial class Bedrijf_Contact : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _bedrijfsid;
		
		private int _contactid;
		
		private EntityRef<Bedrijf> _Bedrijf;
		
		private EntityRef<Contactpersoon> _Contactpersoon;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnbedrijfsidChanging(int value);
    partial void OnbedrijfsidChanged();
    partial void OncontactidChanging(int value);
    partial void OncontactidChanged();
    #endregion
		
		public Bedrijf_Contact()
		{
			this._Bedrijf = default(EntityRef<Bedrijf>);
			this._Contactpersoon = default(EntityRef<Contactpersoon>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_bedrijfsid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int bedrijfsid
		{
			get
			{
				return this._bedrijfsid;
			}
			set
			{
				if ((this._bedrijfsid != value))
				{
					if (this._Bedrijf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnbedrijfsidChanging(value);
					this.SendPropertyChanging();
					this._bedrijfsid = value;
					this.SendPropertyChanged("bedrijfsid");
					this.OnbedrijfsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_contactid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int contactid
		{
			get
			{
				return this._contactid;
			}
			set
			{
				if ((this._contactid != value))
				{
					if (this._Contactpersoon.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OncontactidChanging(value);
					this.SendPropertyChanging();
					this._contactid = value;
					this.SendPropertyChanged("contactid");
					this.OncontactidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Bedrijf_Contact", Storage="_Bedrijf", ThisKey="bedrijfsid", OtherKey="bedrijfsid", IsForeignKey=true)]
		public Bedrijf Bedrijf
		{
			get
			{
				return this._Bedrijf.Entity;
			}
			set
			{
				Bedrijf previousValue = this._Bedrijf.Entity;
				if (((previousValue != value) 
							|| (this._Bedrijf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bedrijf.Entity = null;
						previousValue.Bedrijf_Contacts.Remove(this);
					}
					this._Bedrijf.Entity = value;
					if ((value != null))
					{
						value.Bedrijf_Contacts.Add(this);
						this._bedrijfsid = value.bedrijfsid;
					}
					else
					{
						this._bedrijfsid = default(int);
					}
					this.SendPropertyChanged("Bedrijf");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contactpersoon_Bedrijf_Contact", Storage="_Contactpersoon", ThisKey="contactid", OtherKey="persoonid", IsForeignKey=true)]
		public Contactpersoon Contactpersoon
		{
			get
			{
				return this._Contactpersoon.Entity;
			}
			set
			{
				Contactpersoon previousValue = this._Contactpersoon.Entity;
				if (((previousValue != value) 
							|| (this._Contactpersoon.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Contactpersoon.Entity = null;
						previousValue.Bedrijf_Contacts.Remove(this);
					}
					this._Contactpersoon.Entity = value;
					if ((value != null))
					{
						value.Bedrijf_Contacts.Add(this);
						this._contactid = value.persoonid;
					}
					else
					{
						this._contactid = default(int);
					}
					this.SendPropertyChanged("Contactpersoon");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Contactpersoon")]
	public partial class Contactpersoon : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _persoonid;
		
		private string _email;
		
		private string _fax;
		
		private string _gsm;
		
		private string _telefoonwerk;
		
		private string _telefoonprive;
		
		private string _voornaam;
		
		private string _familienaam;
		
		private bool _actief;
		
		private EntitySet<Bedrijf_Contact> _Bedrijf_Contacts;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpersoonidChanging(int value);
    partial void OnpersoonidChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void OnfaxChanging(string value);
    partial void OnfaxChanged();
    partial void OngsmChanging(string value);
    partial void OngsmChanged();
    partial void OntelefoonwerkChanging(string value);
    partial void OntelefoonwerkChanged();
    partial void OntelefoonpriveChanging(string value);
    partial void OntelefoonpriveChanged();
    partial void OnvoornaamChanging(string value);
    partial void OnvoornaamChanged();
    partial void OnfamilienaamChanging(string value);
    partial void OnfamilienaamChanged();
    partial void OnactiefChanging(bool value);
    partial void OnactiefChanged();
    #endregion
		
		public Contactpersoon()
		{
			this._Bedrijf_Contacts = new EntitySet<Bedrijf_Contact>(new Action<Bedrijf_Contact>(this.attach_Bedrijf_Contacts), new Action<Bedrijf_Contact>(this.detach_Bedrijf_Contacts));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_persoonid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int persoonid
		{
			get
			{
				return this._persoonid;
			}
			set
			{
				if ((this._persoonid != value))
				{
					this.OnpersoonidChanging(value);
					this.SendPropertyChanging();
					this._persoonid = value;
					this.SendPropertyChanged("persoonid");
					this.OnpersoonidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(1024) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fax", DbType="VarChar(10)")]
		public string fax
		{
			get
			{
				return this._fax;
			}
			set
			{
				if ((this._fax != value))
				{
					this.OnfaxChanging(value);
					this.SendPropertyChanging();
					this._fax = value;
					this.SendPropertyChanged("fax");
					this.OnfaxChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_gsm", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string gsm
		{
			get
			{
				return this._gsm;
			}
			set
			{
				if ((this._gsm != value))
				{
					this.OngsmChanging(value);
					this.SendPropertyChanging();
					this._gsm = value;
					this.SendPropertyChanged("gsm");
					this.OngsmChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefoonwerk", DbType="VarChar(9) NOT NULL", CanBeNull=false)]
		public string telefoonwerk
		{
			get
			{
				return this._telefoonwerk;
			}
			set
			{
				if ((this._telefoonwerk != value))
				{
					this.OntelefoonwerkChanging(value);
					this.SendPropertyChanging();
					this._telefoonwerk = value;
					this.SendPropertyChanged("telefoonwerk");
					this.OntelefoonwerkChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_telefoonprive", DbType="VarChar(9)")]
		public string telefoonprive
		{
			get
			{
				return this._telefoonprive;
			}
			set
			{
				if ((this._telefoonprive != value))
				{
					this.OntelefoonpriveChanging(value);
					this.SendPropertyChanging();
					this._telefoonprive = value;
					this.SendPropertyChanged("telefoonprive");
					this.OntelefoonpriveChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voornaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string voornaam
		{
			get
			{
				return this._voornaam;
			}
			set
			{
				if ((this._voornaam != value))
				{
					this.OnvoornaamChanging(value);
					this.SendPropertyChanging();
					this._voornaam = value;
					this.SendPropertyChanged("voornaam");
					this.OnvoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_familienaam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string familienaam
		{
			get
			{
				return this._familienaam;
			}
			set
			{
				if ((this._familienaam != value))
				{
					this.OnfamilienaamChanging(value);
					this.SendPropertyChanging();
					this._familienaam = value;
					this.SendPropertyChanged("familienaam");
					this.OnfamilienaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actief", DbType="Bit NOT NULL")]
		public bool actief
		{
			get
			{
				return this._actief;
			}
			set
			{
				if ((this._actief != value))
				{
					this.OnactiefChanging(value);
					this.SendPropertyChanging();
					this._actief = value;
					this.SendPropertyChanged("actief");
					this.OnactiefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Contactpersoon_Bedrijf_Contact", Storage="_Bedrijf_Contacts", ThisKey="persoonid", OtherKey="contactid")]
		public EntitySet<Bedrijf_Contact> Bedrijf_Contacts
		{
			get
			{
				return this._Bedrijf_Contacts;
			}
			set
			{
				this._Bedrijf_Contacts.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bedrijf_Contacts(Bedrijf_Contact entity)
		{
			this.SendPropertyChanging();
			entity.Contactpersoon = this;
		}
		
		private void detach_Bedrijf_Contacts(Bedrijf_Contact entity)
		{
			this.SendPropertyChanging();
			entity.Contactpersoon = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Hoofdligplaats")]
	public partial class Hoofdligplaat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _hoofdligplaats;
		
		private int _ligplaats;
		
		private EntityRef<Ligplaat> _Ligplaat;
		
		private EntityRef<Ligplaat> _Ligplaat1;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnhoofdligplaatsChanging(int value);
    partial void OnhoofdligplaatsChanged();
    partial void OnligplaatsChanging(int value);
    partial void OnligplaatsChanged();
    #endregion
		
		public Hoofdligplaat()
		{
			this._Ligplaat = default(EntityRef<Ligplaat>);
			this._Ligplaat1 = default(EntityRef<Ligplaat>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_hoofdligplaats", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int hoofdligplaats
		{
			get
			{
				return this._hoofdligplaats;
			}
			set
			{
				if ((this._hoofdligplaats != value))
				{
					if (this._Ligplaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnhoofdligplaatsChanging(value);
					this.SendPropertyChanging();
					this._hoofdligplaats = value;
					this.SendPropertyChanged("hoofdligplaats");
					this.OnhoofdligplaatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ligplaats", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ligplaats
		{
			get
			{
				return this._ligplaats;
			}
			set
			{
				if ((this._ligplaats != value))
				{
					if (this._Ligplaat1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnligplaatsChanging(value);
					this.SendPropertyChanging();
					this._ligplaats = value;
					this.SendPropertyChanged("ligplaats");
					this.OnligplaatsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Hoofdligplaat", Storage="_Ligplaat", ThisKey="hoofdligplaats", OtherKey="ligplaatsid", IsForeignKey=true)]
		public Ligplaat Ligplaat
		{
			get
			{
				return this._Ligplaat.Entity;
			}
			set
			{
				Ligplaat previousValue = this._Ligplaat.Entity;
				if (((previousValue != value) 
							|| (this._Ligplaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ligplaat.Entity = null;
						previousValue.Hoofdligplaats.Remove(this);
					}
					this._Ligplaat.Entity = value;
					if ((value != null))
					{
						value.Hoofdligplaats.Add(this);
						this._hoofdligplaats = value.ligplaatsid;
					}
					else
					{
						this._hoofdligplaats = default(int);
					}
					this.SendPropertyChanged("Ligplaat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Hoofdligplaat1", Storage="_Ligplaat1", ThisKey="ligplaats", OtherKey="ligplaatsid", IsForeignKey=true)]
		public Ligplaat Ligplaat1
		{
			get
			{
				return this._Ligplaat1.Entity;
			}
			set
			{
				Ligplaat previousValue = this._Ligplaat1.Entity;
				if (((previousValue != value) 
							|| (this._Ligplaat1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ligplaat1.Entity = null;
						previousValue.Hoofdligplaats1.Remove(this);
					}
					this._Ligplaat1.Entity = value;
					if ((value != null))
					{
						value.Hoofdligplaats1.Add(this);
						this._ligplaats = value.ligplaatsid;
					}
					else
					{
						this._ligplaats = default(int);
					}
					this.SendPropertyChanged("Ligplaat1");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Ligplaats")]
	public partial class Ligplaat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ligplaatsid;
		
		private string _omschrijving;
		
		private System.Nullable<int> _verantwoordelijkeid;
		
		private EntitySet<Hoofdligplaat> _Hoofdligplaats;
		
		private EntitySet<Hoofdligplaat> _Hoofdligplaats1;
		
		private EntitySet<Verbruik_Ligplaat> _Verbruik_Ligplaats;
		
		private EntityRef<Werknemer> _Werknemer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnligplaatsidChanging(int value);
    partial void OnligplaatsidChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    partial void OnverantwoordelijkeidChanging(System.Nullable<int> value);
    partial void OnverantwoordelijkeidChanged();
    #endregion
		
		public Ligplaat()
		{
			this._Hoofdligplaats = new EntitySet<Hoofdligplaat>(new Action<Hoofdligplaat>(this.attach_Hoofdligplaats), new Action<Hoofdligplaat>(this.detach_Hoofdligplaats));
			this._Hoofdligplaats1 = new EntitySet<Hoofdligplaat>(new Action<Hoofdligplaat>(this.attach_Hoofdligplaats1), new Action<Hoofdligplaat>(this.detach_Hoofdligplaats1));
			this._Verbruik_Ligplaats = new EntitySet<Verbruik_Ligplaat>(new Action<Verbruik_Ligplaat>(this.attach_Verbruik_Ligplaats), new Action<Verbruik_Ligplaat>(this.detach_Verbruik_Ligplaats));
			this._Werknemer = default(EntityRef<Werknemer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ligplaatsid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ligplaatsid
		{
			get
			{
				return this._ligplaatsid;
			}
			set
			{
				if ((this._ligplaatsid != value))
				{
					this.OnligplaatsidChanging(value);
					this.SendPropertyChanging();
					this._ligplaatsid = value;
					this.SendPropertyChanged("ligplaatsid");
					this.OnligplaatsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_verantwoordelijkeid", DbType="Int")]
		public System.Nullable<int> verantwoordelijkeid
		{
			get
			{
				return this._verantwoordelijkeid;
			}
			set
			{
				if ((this._verantwoordelijkeid != value))
				{
					if (this._Werknemer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnverantwoordelijkeidChanging(value);
					this.SendPropertyChanging();
					this._verantwoordelijkeid = value;
					this.SendPropertyChanged("verantwoordelijkeid");
					this.OnverantwoordelijkeidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Hoofdligplaat", Storage="_Hoofdligplaats", ThisKey="ligplaatsid", OtherKey="hoofdligplaats")]
		public EntitySet<Hoofdligplaat> Hoofdligplaats
		{
			get
			{
				return this._Hoofdligplaats;
			}
			set
			{
				this._Hoofdligplaats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Hoofdligplaat1", Storage="_Hoofdligplaats1", ThisKey="ligplaatsid", OtherKey="ligplaats")]
		public EntitySet<Hoofdligplaat> Hoofdligplaats1
		{
			get
			{
				return this._Hoofdligplaats1;
			}
			set
			{
				this._Hoofdligplaats1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Verbruik_Ligplaat", Storage="_Verbruik_Ligplaats", ThisKey="ligplaatsid", OtherKey="ligplaatsid")]
		public EntitySet<Verbruik_Ligplaat> Verbruik_Ligplaats
		{
			get
			{
				return this._Verbruik_Ligplaats;
			}
			set
			{
				this._Verbruik_Ligplaats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Werknemer_Ligplaat", Storage="_Werknemer", ThisKey="verantwoordelijkeid", OtherKey="medewerkerid", IsForeignKey=true)]
		public Werknemer Werknemer
		{
			get
			{
				return this._Werknemer.Entity;
			}
			set
			{
				Werknemer previousValue = this._Werknemer.Entity;
				if (((previousValue != value) 
							|| (this._Werknemer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Werknemer.Entity = null;
						previousValue.Ligplaats.Remove(this);
					}
					this._Werknemer.Entity = value;
					if ((value != null))
					{
						value.Ligplaats.Add(this);
						this._verantwoordelijkeid = value.medewerkerid;
					}
					else
					{
						this._verantwoordelijkeid = default(Nullable<int>);
					}
					this.SendPropertyChanged("Werknemer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Hoofdligplaats(Hoofdligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat = this;
		}
		
		private void detach_Hoofdligplaats(Hoofdligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat = null;
		}
		
		private void attach_Hoofdligplaats1(Hoofdligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat1 = this;
		}
		
		private void detach_Hoofdligplaats1(Hoofdligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat1 = null;
		}
		
		private void attach_Verbruik_Ligplaats(Verbruik_Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat = this;
		}
		
		private void detach_Verbruik_Ligplaats(Verbruik_Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Ligplaat = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opdracht")]
	public partial class Opdracht : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _opdrachtid;
		
		private string _locatie;
		
		private bool _handtekening;
		
		private bool _afgewerkt;
		
		private int _klantid;
		
		private string _omschrijving;
		
		private EntitySet<Opdracht_Werknemer> _Opdracht_Werknemers;
		
		private EntitySet<Prestatie> _Prestaties;
		
		private EntitySet<Verbruikartikel> _Verbruikartikels;
		
		private EntityRef<Bedrijf> _Bedrijf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnopdrachtidChanging(int value);
    partial void OnopdrachtidChanged();
    partial void OnlocatieChanging(string value);
    partial void OnlocatieChanged();
    partial void OnhandtekeningChanging(bool value);
    partial void OnhandtekeningChanged();
    partial void OnafgewerktChanging(bool value);
    partial void OnafgewerktChanged();
    partial void OnklantidChanging(int value);
    partial void OnklantidChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    #endregion
		
		public Opdracht()
		{
			this._Opdracht_Werknemers = new EntitySet<Opdracht_Werknemer>(new Action<Opdracht_Werknemer>(this.attach_Opdracht_Werknemers), new Action<Opdracht_Werknemer>(this.detach_Opdracht_Werknemers));
			this._Prestaties = new EntitySet<Prestatie>(new Action<Prestatie>(this.attach_Prestaties), new Action<Prestatie>(this.detach_Prestaties));
			this._Verbruikartikels = new EntitySet<Verbruikartikel>(new Action<Verbruikartikel>(this.attach_Verbruikartikels), new Action<Verbruikartikel>(this.detach_Verbruikartikels));
			this._Bedrijf = default(EntityRef<Bedrijf>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opdrachtid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int opdrachtid
		{
			get
			{
				return this._opdrachtid;
			}
			set
			{
				if ((this._opdrachtid != value))
				{
					this.OnopdrachtidChanging(value);
					this.SendPropertyChanging();
					this._opdrachtid = value;
					this.SendPropertyChanged("opdrachtid");
					this.OnopdrachtidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_locatie", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string locatie
		{
			get
			{
				return this._locatie;
			}
			set
			{
				if ((this._locatie != value))
				{
					this.OnlocatieChanging(value);
					this.SendPropertyChanging();
					this._locatie = value;
					this.SendPropertyChanged("locatie");
					this.OnlocatieChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_handtekening", DbType="Bit NOT NULL")]
		public bool handtekening
		{
			get
			{
				return this._handtekening;
			}
			set
			{
				if ((this._handtekening != value))
				{
					this.OnhandtekeningChanging(value);
					this.SendPropertyChanging();
					this._handtekening = value;
					this.SendPropertyChanged("handtekening");
					this.OnhandtekeningChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_afgewerkt", DbType="Bit NOT NULL")]
		public bool afgewerkt
		{
			get
			{
				return this._afgewerkt;
			}
			set
			{
				if ((this._afgewerkt != value))
				{
					this.OnafgewerktChanging(value);
					this.SendPropertyChanging();
					this._afgewerkt = value;
					this.SendPropertyChanged("afgewerkt");
					this.OnafgewerktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_klantid", DbType="Int NOT NULL")]
		public int klantid
		{
			get
			{
				return this._klantid;
			}
			set
			{
				if ((this._klantid != value))
				{
					if (this._Bedrijf.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnklantidChanging(value);
					this.SendPropertyChanging();
					this._klantid = value;
					this.SendPropertyChanged("klantid");
					this.OnklantidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="VarChar(160)")]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Opdracht_Werknemer", Storage="_Opdracht_Werknemers", ThisKey="opdrachtid", OtherKey="opdrachtid")]
		public EntitySet<Opdracht_Werknemer> Opdracht_Werknemers
		{
			get
			{
				return this._Opdracht_Werknemers;
			}
			set
			{
				this._Opdracht_Werknemers.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Prestatie", Storage="_Prestaties", ThisKey="opdrachtid", OtherKey="opdrachtid")]
		public EntitySet<Prestatie> Prestaties
		{
			get
			{
				return this._Prestaties;
			}
			set
			{
				this._Prestaties.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Verbruikartikel", Storage="_Verbruikartikels", ThisKey="opdrachtid", OtherKey="opdrachtid")]
		public EntitySet<Verbruikartikel> Verbruikartikels
		{
			get
			{
				return this._Verbruikartikels;
			}
			set
			{
				this._Verbruikartikels.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Bedrijf_Opdracht", Storage="_Bedrijf", ThisKey="klantid", OtherKey="bedrijfsid", IsForeignKey=true)]
		public Bedrijf Bedrijf
		{
			get
			{
				return this._Bedrijf.Entity;
			}
			set
			{
				Bedrijf previousValue = this._Bedrijf.Entity;
				if (((previousValue != value) 
							|| (this._Bedrijf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bedrijf.Entity = null;
						previousValue.Opdrachts.Remove(this);
					}
					this._Bedrijf.Entity = value;
					if ((value != null))
					{
						value.Opdrachts.Add(this);
						this._klantid = value.bedrijfsid;
					}
					else
					{
						this._klantid = default(int);
					}
					this.SendPropertyChanged("Bedrijf");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Opdracht_Werknemers(Opdracht_Werknemer entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = this;
		}
		
		private void detach_Opdracht_Werknemers(Opdracht_Werknemer entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = null;
		}
		
		private void attach_Prestaties(Prestatie entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = this;
		}
		
		private void detach_Prestaties(Prestatie entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = null;
		}
		
		private void attach_Verbruikartikels(Verbruikartikel entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = this;
		}
		
		private void detach_Verbruikartikels(Verbruikartikel entity)
		{
			this.SendPropertyChanging();
			entity.Opdracht = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Opdracht_Werknemer")]
	public partial class Opdracht_Werknemer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _opdrachtid;
		
		private int _werknemerid;
		
		private System.Nullable<System.DateTime> _datum;
		
		private EntityRef<Opdracht> _Opdracht;
		
		private EntityRef<Werknemer> _Werknemer;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnopdrachtidChanging(int value);
    partial void OnopdrachtidChanged();
    partial void OnwerknemeridChanging(int value);
    partial void OnwerknemeridChanged();
    partial void OndatumChanging(System.Nullable<System.DateTime> value);
    partial void OndatumChanged();
    #endregion
		
		public Opdracht_Werknemer()
		{
			this._Opdracht = default(EntityRef<Opdracht>);
			this._Werknemer = default(EntityRef<Werknemer>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opdrachtid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int opdrachtid
		{
			get
			{
				return this._opdrachtid;
			}
			set
			{
				if ((this._opdrachtid != value))
				{
					if (this._Opdracht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnopdrachtidChanging(value);
					this.SendPropertyChanging();
					this._opdrachtid = value;
					this.SendPropertyChanged("opdrachtid");
					this.OnopdrachtidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_werknemerid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int werknemerid
		{
			get
			{
				return this._werknemerid;
			}
			set
			{
				if ((this._werknemerid != value))
				{
					if (this._Werknemer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnwerknemeridChanging(value);
					this.SendPropertyChanging();
					this._werknemerid = value;
					this.SendPropertyChanged("werknemerid");
					this.OnwerknemeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_datum", DbType="Date")]
		public System.Nullable<System.DateTime> datum
		{
			get
			{
				return this._datum;
			}
			set
			{
				if ((this._datum != value))
				{
					this.OndatumChanging(value);
					this.SendPropertyChanging();
					this._datum = value;
					this.SendPropertyChanged("datum");
					this.OndatumChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Opdracht_Werknemer", Storage="_Opdracht", ThisKey="opdrachtid", OtherKey="opdrachtid", IsForeignKey=true)]
		public Opdracht Opdracht
		{
			get
			{
				return this._Opdracht.Entity;
			}
			set
			{
				Opdracht previousValue = this._Opdracht.Entity;
				if (((previousValue != value) 
							|| (this._Opdracht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opdracht.Entity = null;
						previousValue.Opdracht_Werknemers.Remove(this);
					}
					this._Opdracht.Entity = value;
					if ((value != null))
					{
						value.Opdracht_Werknemers.Add(this);
						this._opdrachtid = value.opdrachtid;
					}
					else
					{
						this._opdrachtid = default(int);
					}
					this.SendPropertyChanged("Opdracht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Werknemer_Opdracht_Werknemer", Storage="_Werknemer", ThisKey="werknemerid", OtherKey="medewerkerid", IsForeignKey=true)]
		public Werknemer Werknemer
		{
			get
			{
				return this._Werknemer.Entity;
			}
			set
			{
				Werknemer previousValue = this._Werknemer.Entity;
				if (((previousValue != value) 
							|| (this._Werknemer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Werknemer.Entity = null;
						previousValue.Opdracht_Werknemers.Remove(this);
					}
					this._Werknemer.Entity = value;
					if ((value != null))
					{
						value.Opdracht_Werknemers.Add(this);
						this._werknemerid = value.medewerkerid;
					}
					else
					{
						this._werknemerid = default(int);
					}
					this.SendPropertyChanged("Werknemer");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prestatie")]
	public partial class Prestatie : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prestatieid;
		
		private System.Nullable<System.DateTime> _aanvang;
		
		private System.Nullable<decimal> _duur;
		
		private int _opdrachtid;
		
		private int _prestatiesoortid;
		
		private EntityRef<Opdracht> _Opdracht;
		
		private EntityRef<Prestatiesoort> _Prestatiesoort;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprestatieidChanging(int value);
    partial void OnprestatieidChanged();
    partial void OnaanvangChanging(System.Nullable<System.DateTime> value);
    partial void OnaanvangChanged();
    partial void OnduurChanging(System.Nullable<decimal> value);
    partial void OnduurChanged();
    partial void OnopdrachtidChanging(int value);
    partial void OnopdrachtidChanged();
    partial void OnprestatiesoortidChanging(int value);
    partial void OnprestatiesoortidChanged();
    #endregion
		
		public Prestatie()
		{
			this._Opdracht = default(EntityRef<Opdracht>);
			this._Prestatiesoort = default(EntityRef<Prestatiesoort>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prestatieid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int prestatieid
		{
			get
			{
				return this._prestatieid;
			}
			set
			{
				if ((this._prestatieid != value))
				{
					this.OnprestatieidChanging(value);
					this.SendPropertyChanging();
					this._prestatieid = value;
					this.SendPropertyChanged("prestatieid");
					this.OnprestatieidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aanvang", DbType="DateTime")]
		public System.Nullable<System.DateTime> aanvang
		{
			get
			{
				return this._aanvang;
			}
			set
			{
				if ((this._aanvang != value))
				{
					this.OnaanvangChanging(value);
					this.SendPropertyChanging();
					this._aanvang = value;
					this.SendPropertyChanged("aanvang");
					this.OnaanvangChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_duur", DbType="Decimal(18,0)")]
		public System.Nullable<decimal> duur
		{
			get
			{
				return this._duur;
			}
			set
			{
				if ((this._duur != value))
				{
					this.OnduurChanging(value);
					this.SendPropertyChanging();
					this._duur = value;
					this.SendPropertyChanged("duur");
					this.OnduurChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opdrachtid", DbType="Int NOT NULL")]
		public int opdrachtid
		{
			get
			{
				return this._opdrachtid;
			}
			set
			{
				if ((this._opdrachtid != value))
				{
					if (this._Opdracht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnopdrachtidChanging(value);
					this.SendPropertyChanging();
					this._opdrachtid = value;
					this.SendPropertyChanged("opdrachtid");
					this.OnopdrachtidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prestatiesoortid", DbType="Int NOT NULL")]
		public int prestatiesoortid
		{
			get
			{
				return this._prestatiesoortid;
			}
			set
			{
				if ((this._prestatiesoortid != value))
				{
					if (this._Prestatiesoort.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnprestatiesoortidChanging(value);
					this.SendPropertyChanging();
					this._prestatiesoortid = value;
					this.SendPropertyChanged("prestatiesoortid");
					this.OnprestatiesoortidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Prestatie", Storage="_Opdracht", ThisKey="opdrachtid", OtherKey="opdrachtid", IsForeignKey=true)]
		public Opdracht Opdracht
		{
			get
			{
				return this._Opdracht.Entity;
			}
			set
			{
				Opdracht previousValue = this._Opdracht.Entity;
				if (((previousValue != value) 
							|| (this._Opdracht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opdracht.Entity = null;
						previousValue.Prestaties.Remove(this);
					}
					this._Opdracht.Entity = value;
					if ((value != null))
					{
						value.Prestaties.Add(this);
						this._opdrachtid = value.opdrachtid;
					}
					else
					{
						this._opdrachtid = default(int);
					}
					this.SendPropertyChanged("Opdracht");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prestatiesoort_Prestatie", Storage="_Prestatiesoort", ThisKey="prestatiesoortid", OtherKey="prestatieid", IsForeignKey=true)]
		public Prestatiesoort Prestatiesoort
		{
			get
			{
				return this._Prestatiesoort.Entity;
			}
			set
			{
				Prestatiesoort previousValue = this._Prestatiesoort.Entity;
				if (((previousValue != value) 
							|| (this._Prestatiesoort.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Prestatiesoort.Entity = null;
						previousValue.Prestaties.Remove(this);
					}
					this._Prestatiesoort.Entity = value;
					if ((value != null))
					{
						value.Prestaties.Add(this);
						this._prestatiesoortid = value.prestatieid;
					}
					else
					{
						this._prestatiesoortid = default(int);
					}
					this.SendPropertyChanged("Prestatiesoort");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Prestatiesoort")]
	public partial class Prestatiesoort : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _prestatieid;
		
		private string _omschrijving;
		
		private EntitySet<Prestatie> _Prestaties;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnprestatieidChanging(int value);
    partial void OnprestatieidChanged();
    partial void OnomschrijvingChanging(string value);
    partial void OnomschrijvingChanged();
    #endregion
		
		public Prestatiesoort()
		{
			this._Prestaties = new EntitySet<Prestatie>(new Action<Prestatie>(this.attach_Prestaties), new Action<Prestatie>(this.detach_Prestaties));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_prestatieid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int prestatieid
		{
			get
			{
				return this._prestatieid;
			}
			set
			{
				if ((this._prestatieid != value))
				{
					this.OnprestatieidChanging(value);
					this.SendPropertyChanging();
					this._prestatieid = value;
					this.SendPropertyChanged("prestatieid");
					this.OnprestatieidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_omschrijving", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string omschrijving
		{
			get
			{
				return this._omschrijving;
			}
			set
			{
				if ((this._omschrijving != value))
				{
					this.OnomschrijvingChanging(value);
					this.SendPropertyChanging();
					this._omschrijving = value;
					this.SendPropertyChanged("omschrijving");
					this.OnomschrijvingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Prestatiesoort_Prestatie", Storage="_Prestaties", ThisKey="prestatieid", OtherKey="prestatiesoortid")]
		public EntitySet<Prestatie> Prestaties
		{
			get
			{
				return this._Prestaties;
			}
			set
			{
				this._Prestaties.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Prestaties(Prestatie entity)
		{
			this.SendPropertyChanging();
			entity.Prestatiesoort = this;
		}
		
		private void detach_Prestaties(Prestatie entity)
		{
			this.SendPropertyChanging();
			entity.Prestatiesoort = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Stad")]
	public partial class Stad : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _stadid;
		
		private string _postcode;
		
		private string _stad1;
		
		private EntityRef<Bedrijf> _Bedrijf;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnstadidChanging(int value);
    partial void OnstadidChanged();
    partial void OnpostcodeChanging(string value);
    partial void OnpostcodeChanged();
    partial void Onstad1Changing(string value);
    partial void Onstad1Changed();
    #endregion
		
		public Stad()
		{
			this._Bedrijf = default(EntityRef<Bedrijf>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_stadid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int stadid
		{
			get
			{
				return this._stadid;
			}
			set
			{
				if ((this._stadid != value))
				{
					this.OnstadidChanging(value);
					this.SendPropertyChanging();
					this._stadid = value;
					this.SendPropertyChanged("stadid");
					this.OnstadidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_postcode", DbType="VarChar(6) NOT NULL", CanBeNull=false)]
		public string postcode
		{
			get
			{
				return this._postcode;
			}
			set
			{
				if ((this._postcode != value))
				{
					this.OnpostcodeChanging(value);
					this.SendPropertyChanging();
					this._postcode = value;
					this.SendPropertyChanged("postcode");
					this.OnpostcodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="stad", Storage="_stad1", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string stad1
		{
			get
			{
				return this._stad1;
			}
			set
			{
				if ((this._stad1 != value))
				{
					this.Onstad1Changing(value);
					this.SendPropertyChanging();
					this._stad1 = value;
					this.SendPropertyChanged("stad1");
					this.Onstad1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Stad_Bedrijf", Storage="_Bedrijf", ThisKey="stadid", OtherKey="bedrijfsid", IsUnique=true, IsForeignKey=false)]
		public Bedrijf Bedrijf
		{
			get
			{
				return this._Bedrijf.Entity;
			}
			set
			{
				Bedrijf previousValue = this._Bedrijf.Entity;
				if (((previousValue != value) 
							|| (this._Bedrijf.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bedrijf.Entity = null;
						previousValue.Stad = null;
					}
					this._Bedrijf.Entity = value;
					if ((value != null))
					{
						value.Stad = this;
					}
					this.SendPropertyChanged("Bedrijf");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Verbruik_Ligplaats")]
	public partial class Verbruik_Ligplaat : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _artikelid;
		
		private int _ligplaatsid;
		
		private int _aantalStock;
		
		private int _minStock;
		
		private int _maxStock;
		
		private EntityRef<Ligplaat> _Ligplaat;
		
		private EntityRef<Verbruikartikel> _Verbruikartikel;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnartikelidChanging(int value);
    partial void OnartikelidChanged();
    partial void OnligplaatsidChanging(int value);
    partial void OnligplaatsidChanged();
    partial void OnaantalStockChanging(int value);
    partial void OnaantalStockChanged();
    partial void OnminStockChanging(int value);
    partial void OnminStockChanged();
    partial void OnmaxStockChanging(int value);
    partial void OnmaxStockChanged();
    #endregion
		
		public Verbruik_Ligplaat()
		{
			this._Ligplaat = default(EntityRef<Ligplaat>);
			this._Verbruikartikel = default(EntityRef<Verbruikartikel>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artikelid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int artikelid
		{
			get
			{
				return this._artikelid;
			}
			set
			{
				if ((this._artikelid != value))
				{
					if (this._Verbruikartikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnartikelidChanging(value);
					this.SendPropertyChanging();
					this._artikelid = value;
					this.SendPropertyChanged("artikelid");
					this.OnartikelidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ligplaatsid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int ligplaatsid
		{
			get
			{
				return this._ligplaatsid;
			}
			set
			{
				if ((this._ligplaatsid != value))
				{
					if (this._Ligplaat.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnligplaatsidChanging(value);
					this.SendPropertyChanging();
					this._ligplaatsid = value;
					this.SendPropertyChanged("ligplaatsid");
					this.OnligplaatsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aantalStock", DbType="Int NOT NULL")]
		public int aantalStock
		{
			get
			{
				return this._aantalStock;
			}
			set
			{
				if ((this._aantalStock != value))
				{
					this.OnaantalStockChanging(value);
					this.SendPropertyChanging();
					this._aantalStock = value;
					this.SendPropertyChanged("aantalStock");
					this.OnaantalStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_minStock", DbType="Int NOT NULL")]
		public int minStock
		{
			get
			{
				return this._minStock;
			}
			set
			{
				if ((this._minStock != value))
				{
					this.OnminStockChanging(value);
					this.SendPropertyChanging();
					this._minStock = value;
					this.SendPropertyChanged("minStock");
					this.OnminStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_maxStock", DbType="Int NOT NULL")]
		public int maxStock
		{
			get
			{
				return this._maxStock;
			}
			set
			{
				if ((this._maxStock != value))
				{
					this.OnmaxStockChanging(value);
					this.SendPropertyChanging();
					this._maxStock = value;
					this.SendPropertyChanged("maxStock");
					this.OnmaxStockChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Ligplaat_Verbruik_Ligplaat", Storage="_Ligplaat", ThisKey="ligplaatsid", OtherKey="ligplaatsid", IsForeignKey=true)]
		public Ligplaat Ligplaat
		{
			get
			{
				return this._Ligplaat.Entity;
			}
			set
			{
				Ligplaat previousValue = this._Ligplaat.Entity;
				if (((previousValue != value) 
							|| (this._Ligplaat.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Ligplaat.Entity = null;
						previousValue.Verbruik_Ligplaats.Remove(this);
					}
					this._Ligplaat.Entity = value;
					if ((value != null))
					{
						value.Verbruik_Ligplaats.Add(this);
						this._ligplaatsid = value.ligplaatsid;
					}
					else
					{
						this._ligplaatsid = default(int);
					}
					this.SendPropertyChanged("Ligplaat");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verbruikartikel_Verbruik_Ligplaat", Storage="_Verbruikartikel", ThisKey="artikelid", OtherKey="artikelid", IsForeignKey=true)]
		public Verbruikartikel Verbruikartikel
		{
			get
			{
				return this._Verbruikartikel.Entity;
			}
			set
			{
				Verbruikartikel previousValue = this._Verbruikartikel.Entity;
				if (((previousValue != value) 
							|| (this._Verbruikartikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Verbruikartikel.Entity = null;
						previousValue.Verbruik_Ligplaats.Remove(this);
					}
					this._Verbruikartikel.Entity = value;
					if ((value != null))
					{
						value.Verbruik_Ligplaats.Add(this);
						this._artikelid = value.artikelid;
					}
					else
					{
						this._artikelid = default(int);
					}
					this.SendPropertyChanged("Verbruikartikel");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Verbruikartikel")]
	public partial class Verbruikartikel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _artikelid;
		
		private int _aantalGebruikt;
		
		private int _opdrachtid;
		
		private EntitySet<Verbruik_Ligplaat> _Verbruik_Ligplaats;
		
		private EntityRef<Artikel> _Artikel;
		
		private EntityRef<Opdracht> _Opdracht;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnartikelidChanging(int value);
    partial void OnartikelidChanged();
    partial void OnaantalGebruiktChanging(int value);
    partial void OnaantalGebruiktChanged();
    partial void OnopdrachtidChanging(int value);
    partial void OnopdrachtidChanged();
    #endregion
		
		public Verbruikartikel()
		{
			this._Verbruik_Ligplaats = new EntitySet<Verbruik_Ligplaat>(new Action<Verbruik_Ligplaat>(this.attach_Verbruik_Ligplaats), new Action<Verbruik_Ligplaat>(this.detach_Verbruik_Ligplaats));
			this._Artikel = default(EntityRef<Artikel>);
			this._Opdracht = default(EntityRef<Opdracht>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_artikelid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int artikelid
		{
			get
			{
				return this._artikelid;
			}
			set
			{
				if ((this._artikelid != value))
				{
					if (this._Artikel.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnartikelidChanging(value);
					this.SendPropertyChanging();
					this._artikelid = value;
					this.SendPropertyChanged("artikelid");
					this.OnartikelidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_aantalGebruikt", DbType="Int NOT NULL")]
		public int aantalGebruikt
		{
			get
			{
				return this._aantalGebruikt;
			}
			set
			{
				if ((this._aantalGebruikt != value))
				{
					this.OnaantalGebruiktChanging(value);
					this.SendPropertyChanging();
					this._aantalGebruikt = value;
					this.SendPropertyChanged("aantalGebruikt");
					this.OnaantalGebruiktChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_opdrachtid", DbType="Int NOT NULL")]
		public int opdrachtid
		{
			get
			{
				return this._opdrachtid;
			}
			set
			{
				if ((this._opdrachtid != value))
				{
					if (this._Opdracht.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnopdrachtidChanging(value);
					this.SendPropertyChanging();
					this._opdrachtid = value;
					this.SendPropertyChanged("opdrachtid");
					this.OnopdrachtidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Verbruikartikel_Verbruik_Ligplaat", Storage="_Verbruik_Ligplaats", ThisKey="artikelid", OtherKey="artikelid")]
		public EntitySet<Verbruik_Ligplaat> Verbruik_Ligplaats
		{
			get
			{
				return this._Verbruik_Ligplaats;
			}
			set
			{
				this._Verbruik_Ligplaats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Artikel_Verbruikartikel", Storage="_Artikel", ThisKey="artikelid", OtherKey="id", IsForeignKey=true)]
		public Artikel Artikel
		{
			get
			{
				return this._Artikel.Entity;
			}
			set
			{
				Artikel previousValue = this._Artikel.Entity;
				if (((previousValue != value) 
							|| (this._Artikel.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Artikel.Entity = null;
						previousValue.Verbruikartikel = null;
					}
					this._Artikel.Entity = value;
					if ((value != null))
					{
						value.Verbruikartikel = this;
						this._artikelid = value.id;
					}
					else
					{
						this._artikelid = default(int);
					}
					this.SendPropertyChanged("Artikel");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Opdracht_Verbruikartikel", Storage="_Opdracht", ThisKey="opdrachtid", OtherKey="opdrachtid", IsForeignKey=true)]
		public Opdracht Opdracht
		{
			get
			{
				return this._Opdracht.Entity;
			}
			set
			{
				Opdracht previousValue = this._Opdracht.Entity;
				if (((previousValue != value) 
							|| (this._Opdracht.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Opdracht.Entity = null;
						previousValue.Verbruikartikels.Remove(this);
					}
					this._Opdracht.Entity = value;
					if ((value != null))
					{
						value.Verbruikartikels.Add(this);
						this._opdrachtid = value.opdrachtid;
					}
					else
					{
						this._opdrachtid = default(int);
					}
					this.SendPropertyChanged("Opdracht");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Verbruik_Ligplaats(Verbruik_Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Verbruikartikel = this;
		}
		
		private void detach_Verbruik_Ligplaats(Verbruik_Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Verbruikartikel = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Werknemer")]
	public partial class Werknemer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _medewerkerid;
		
		private string _naam;
		
		private string _voornaam;
		
		private string _passwoord;
		
		private bool _actief;
		
		private string _emailadres;
		
		private EntitySet<Ligplaat> _Ligplaats;
		
		private EntitySet<Opdracht_Werknemer> _Opdracht_Werknemers;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnmedewerkeridChanging(int value);
    partial void OnmedewerkeridChanged();
    partial void OnnaamChanging(string value);
    partial void OnnaamChanged();
    partial void OnvoornaamChanging(string value);
    partial void OnvoornaamChanged();
    partial void OnpasswoordChanging(string value);
    partial void OnpasswoordChanged();
    partial void OnactiefChanging(bool value);
    partial void OnactiefChanged();
    partial void OnemailadresChanging(string value);
    partial void OnemailadresChanged();
    #endregion
		
		public Werknemer()
		{
			this._Ligplaats = new EntitySet<Ligplaat>(new Action<Ligplaat>(this.attach_Ligplaats), new Action<Ligplaat>(this.detach_Ligplaats));
			this._Opdracht_Werknemers = new EntitySet<Opdracht_Werknemer>(new Action<Opdracht_Werknemer>(this.attach_Opdracht_Werknemers), new Action<Opdracht_Werknemer>(this.detach_Opdracht_Werknemers));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_medewerkerid", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int medewerkerid
		{
			get
			{
				return this._medewerkerid;
			}
			set
			{
				if ((this._medewerkerid != value))
				{
					this.OnmedewerkeridChanging(value);
					this.SendPropertyChanging();
					this._medewerkerid = value;
					this.SendPropertyChanged("medewerkerid");
					this.OnmedewerkeridChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_naam", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string naam
		{
			get
			{
				return this._naam;
			}
			set
			{
				if ((this._naam != value))
				{
					this.OnnaamChanging(value);
					this.SendPropertyChanging();
					this._naam = value;
					this.SendPropertyChanged("naam");
					this.OnnaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_voornaam", DbType="VarChar(25) NOT NULL", CanBeNull=false)]
		public string voornaam
		{
			get
			{
				return this._voornaam;
			}
			set
			{
				if ((this._voornaam != value))
				{
					this.OnvoornaamChanging(value);
					this.SendPropertyChanging();
					this._voornaam = value;
					this.SendPropertyChanged("voornaam");
					this.OnvoornaamChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_passwoord", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string passwoord
		{
			get
			{
				return this._passwoord;
			}
			set
			{
				if ((this._passwoord != value))
				{
					this.OnpasswoordChanging(value);
					this.SendPropertyChanging();
					this._passwoord = value;
					this.SendPropertyChanged("passwoord");
					this.OnpasswoordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_actief", DbType="Bit NOT NULL")]
		public bool actief
		{
			get
			{
				return this._actief;
			}
			set
			{
				if ((this._actief != value))
				{
					this.OnactiefChanging(value);
					this.SendPropertyChanging();
					this._actief = value;
					this.SendPropertyChanged("actief");
					this.OnactiefChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_emailadres", DbType="VarChar(1024)")]
		public string emailadres
		{
			get
			{
				return this._emailadres;
			}
			set
			{
				if ((this._emailadres != value))
				{
					this.OnemailadresChanging(value);
					this.SendPropertyChanging();
					this._emailadres = value;
					this.SendPropertyChanged("emailadres");
					this.OnemailadresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Werknemer_Ligplaat", Storage="_Ligplaats", ThisKey="medewerkerid", OtherKey="verantwoordelijkeid")]
		public EntitySet<Ligplaat> Ligplaats
		{
			get
			{
				return this._Ligplaats;
			}
			set
			{
				this._Ligplaats.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Werknemer_Opdracht_Werknemer", Storage="_Opdracht_Werknemers", ThisKey="medewerkerid", OtherKey="werknemerid")]
		public EntitySet<Opdracht_Werknemer> Opdracht_Werknemers
		{
			get
			{
				return this._Opdracht_Werknemers;
			}
			set
			{
				this._Opdracht_Werknemers.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Ligplaats(Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Werknemer = this;
		}
		
		private void detach_Ligplaats(Ligplaat entity)
		{
			this.SendPropertyChanging();
			entity.Werknemer = null;
		}
		
		private void attach_Opdracht_Werknemers(Opdracht_Werknemer entity)
		{
			this.SendPropertyChanging();
			entity.Werknemer = this;
		}
		
		private void detach_Opdracht_Werknemers(Opdracht_Werknemer entity)
		{
			this.SendPropertyChanging();
			entity.Werknemer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="zumero.[log]")]
	public partial class log : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _logid;
		
		private string _url;
		
		private long _unix_time;
		
		private string _ip_address;
		
		private long _request_size;
		
		private long _response_size;
		
		private int _status;
		
		private int _elapsed;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnlogidChanging(long value);
    partial void OnlogidChanged();
    partial void OnurlChanging(string value);
    partial void OnurlChanged();
    partial void Onunix_timeChanging(long value);
    partial void Onunix_timeChanged();
    partial void Onip_addressChanging(string value);
    partial void Onip_addressChanged();
    partial void Onrequest_sizeChanging(long value);
    partial void Onrequest_sizeChanged();
    partial void Onresponse_sizeChanging(long value);
    partial void Onresponse_sizeChanged();
    partial void OnstatusChanging(int value);
    partial void OnstatusChanged();
    partial void OnelapsedChanging(int value);
    partial void OnelapsedChanged();
    #endregion
		
		public log()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_logid", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long logid
		{
			get
			{
				return this._logid;
			}
			set
			{
				if ((this._logid != value))
				{
					this.OnlogidChanging(value);
					this.SendPropertyChanging();
					this._logid = value;
					this.SendPropertyChanged("logid");
					this.OnlogidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_url", DbType="NVarChar(MAX) NOT NULL", CanBeNull=false)]
		public string url
		{
			get
			{
				return this._url;
			}
			set
			{
				if ((this._url != value))
				{
					this.OnurlChanging(value);
					this.SendPropertyChanging();
					this._url = value;
					this.SendPropertyChanged("url");
					this.OnurlChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_unix_time", DbType="BigInt NOT NULL")]
		public long unix_time
		{
			get
			{
				return this._unix_time;
			}
			set
			{
				if ((this._unix_time != value))
				{
					this.Onunix_timeChanging(value);
					this.SendPropertyChanging();
					this._unix_time = value;
					this.SendPropertyChanged("unix_time");
					this.Onunix_timeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ip_address", DbType="VarChar(40) NOT NULL", CanBeNull=false)]
		public string ip_address
		{
			get
			{
				return this._ip_address;
			}
			set
			{
				if ((this._ip_address != value))
				{
					this.Onip_addressChanging(value);
					this.SendPropertyChanging();
					this._ip_address = value;
					this.SendPropertyChanged("ip_address");
					this.Onip_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_request_size", DbType="BigInt NOT NULL")]
		public long request_size
		{
			get
			{
				return this._request_size;
			}
			set
			{
				if ((this._request_size != value))
				{
					this.Onrequest_sizeChanging(value);
					this.SendPropertyChanging();
					this._request_size = value;
					this.SendPropertyChanged("request_size");
					this.Onrequest_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_response_size", DbType="BigInt NOT NULL")]
		public long response_size
		{
			get
			{
				return this._response_size;
			}
			set
			{
				if ((this._response_size != value))
				{
					this.Onresponse_sizeChanging(value);
					this.SendPropertyChanging();
					this._response_size = value;
					this.SendPropertyChanged("response_size");
					this.Onresponse_sizeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_elapsed", DbType="Int NOT NULL")]
		public int elapsed
		{
			get
			{
				return this._elapsed;
			}
			set
			{
				if ((this._elapsed != value))
				{
					this.OnelapsedChanging(value);
					this.SendPropertyChanging();
					this._elapsed = value;
					this.SendPropertyChanged("elapsed");
					this.OnelapsedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
